{"ast":null,"code":"var _jsxFileName = \"/Users/zestgeek3/work/invocenew/src/Components/Invoice/CreateInvoice.js\",\n  _s = $RefreshSig$();\nimport { Button, Container, TextField } from \"@mui/material\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Stack from \"@mui/material/Stack\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport { Typography } from \"@mui/material\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport ProtectedRoute from \"../../Routes/ProtectedRoute\";\nimport Spinner from \"../Spinner/Spinner\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setLoading } from \"../../Store/Slices/Invoice\";\nimport { GET_INVOICE, GET_STUDENTS } from \"../../Store/Action_Constants\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport { Navbar } from \"../Navbar/Navbar\";\nimport { Footer } from \"../Footer/Footer\";\nimport moment from \"moment\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\nexport const CreateInvoice = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [shareInvoiceWith, setShareInvoiceWith] = useState(\"\");\n  const [error, setError] = React.useState({\n    studentname: \"\",\n    duration: \"\"\n  });\n\n  // const { clients } = useSelector((state) => state.clients);\n  const {\n    students\n  } = useSelector(state => state.Students);\n  const {\n    invoiceCreating,\n    invoiceToUpdate\n  } = useSelector(state => state.invoices);\n  console.log(\"invoiceToUpdate, invoiceCreating \", invoiceToUpdate, invoiceCreating);\n  const [selectedStudent, setSelectedStudent] = React.useState({\n    id: \"\",\n    index: \"\",\n    name: \"\"\n  });\n  const [selectedDuration, setSelectedDuration] = React.useState({\n    id: \"\",\n    index: \"\",\n    duration: \"\"\n  });\n  const [selectedCourse, setSelectedCourse] = React.useState({\n    id: \"\",\n    index: \"\",\n    course: \"\"\n  });\n  const [selectedCourseFee, setSelectedCourseFee] = React.useState({\n    id: \"\",\n    index: \"\",\n    fee: \"\"\n  });\n  const [depositeAmount, setDepositeAmount] = React.useState(0);\n  const [pendingAmount, setPendingAmount] = React.useState(0);\n  const [paymentMethod, setPaymentMethod] = React.useState(\"\");\n  const navigate = useNavigate();\n\n  // const handleDateChange = (newValue) => {\n  //   setInvoiceDate(newValue);\n  //   if (newValue.diff(dueDate, \"hour\") >= 0) {\n  //     setDueDate(null);\n  //     setIsInvalidDate(true);\n  //   }\n  // };\n\n  const {\n    invoiceId\n  } = useParams();\n  const isInvoiceCreating = JSON.parse(localStorage.getItem(\"invoicecreating\"));\n  React.useEffect(() => {\n    if (invoiceId) {\n      dispatch(setLoading(true));\n      dispatch({\n        type: GET_INVOICE,\n        payload: invoiceId\n      });\n    }\n  }, []);\n  React.useEffect(() => {\n    if (invoiceToUpdate && invoiceId) {\n      var _invoiceToUpdate$clie, _invoiceToUpdate$clie2, _invoiceToUpdate$clie3, _invoiceToUpdate$stud, _invoiceToUpdate$stud2, _invoiceToUpdate$stud3, _invoiceToUpdate$stud4, _invoiceToUpdate$stud5, _invoiceToUpdate$stud6, _invoiceToUpdate$stud7, _invoiceToUpdate$stud8, _invoiceToUpdate$stud9;\n      setTotalAmount(Number(invoiceToUpdate.invoicetotalvalue));\n      setSelectedStudent({\n        id: invoiceToUpdate === null || invoiceToUpdate === void 0 ? void 0 : (_invoiceToUpdate$clie = invoiceToUpdate.client_detail) === null || _invoiceToUpdate$clie === void 0 ? void 0 : _invoiceToUpdate$clie.id,\n        index: invoiceToUpdate === null || invoiceToUpdate === void 0 ? void 0 : (_invoiceToUpdate$clie2 = invoiceToUpdate.client_detail) === null || _invoiceToUpdate$clie2 === void 0 ? void 0 : _invoiceToUpdate$clie2.id,\n        name: invoiceToUpdate === null || invoiceToUpdate === void 0 ? void 0 : (_invoiceToUpdate$clie3 = invoiceToUpdate.client_detail) === null || _invoiceToUpdate$clie3 === void 0 ? void 0 : _invoiceToUpdate$clie3.name\n      });\n      setSelectedCourse({\n        id: invoiceToUpdate === null || invoiceToUpdate === void 0 ? void 0 : (_invoiceToUpdate$stud = invoiceToUpdate.student_detail) === null || _invoiceToUpdate$stud === void 0 ? void 0 : _invoiceToUpdate$stud.id,\n        index: invoiceToUpdate === null || invoiceToUpdate === void 0 ? void 0 : (_invoiceToUpdate$stud2 = invoiceToUpdate.student_detail) === null || _invoiceToUpdate$stud2 === void 0 ? void 0 : _invoiceToUpdate$stud2.id,\n        course: invoiceToUpdate === null || invoiceToUpdate === void 0 ? void 0 : (_invoiceToUpdate$stud3 = invoiceToUpdate.student_detail) === null || _invoiceToUpdate$stud3 === void 0 ? void 0 : _invoiceToUpdate$stud3.course\n      });\n      setSelectedDuration({\n        id: invoiceToUpdate === null || invoiceToUpdate === void 0 ? void 0 : (_invoiceToUpdate$stud4 = invoiceToUpdate.student_detail) === null || _invoiceToUpdate$stud4 === void 0 ? void 0 : _invoiceToUpdate$stud4.id,\n        index: invoiceToUpdate === null || invoiceToUpdate === void 0 ? void 0 : (_invoiceToUpdate$stud5 = invoiceToUpdate.student_detail) === null || _invoiceToUpdate$stud5 === void 0 ? void 0 : _invoiceToUpdate$stud5.id,\n        duration: invoiceToUpdate === null || invoiceToUpdate === void 0 ? void 0 : (_invoiceToUpdate$stud6 = invoiceToUpdate.student_detail) === null || _invoiceToUpdate$stud6 === void 0 ? void 0 : _invoiceToUpdate$stud6.course\n      });\n      setSelectedCourseFee({\n        id: invoiceToUpdate === null || invoiceToUpdate === void 0 ? void 0 : (_invoiceToUpdate$stud7 = invoiceToUpdate.student_detail) === null || _invoiceToUpdate$stud7 === void 0 ? void 0 : _invoiceToUpdate$stud7.id,\n        index: invoiceToUpdate === null || invoiceToUpdate === void 0 ? void 0 : (_invoiceToUpdate$stud8 = invoiceToUpdate.student_detail) === null || _invoiceToUpdate$stud8 === void 0 ? void 0 : _invoiceToUpdate$stud8.id,\n        fee: invoiceToUpdate === null || invoiceToUpdate === void 0 ? void 0 : (_invoiceToUpdate$stud9 = invoiceToUpdate.student_detail) === null || _invoiceToUpdate$stud9 === void 0 ? void 0 : _invoiceToUpdate$stud9.course\n      });\n      setDepositeAmount(Number(invoiceToUpdate));\n    }\n  }, [invoiceToUpdate]);\n  React.useEffect(() => {\n    if (!invoiceCreating && (!isInvoiceCreating || isInvoiceCreating === \"false\")) {\n      navigate(\"/invoices\");\n    }\n  }, [invoiceCreating]);\n  React.useEffect(() => {\n    dispatch({\n      type: GET_STUDENTS,\n      dropdown: 1\n    });\n  }, []);\n  const validateField = (fieldName, value) => {\n    if (fieldName === \"studentname\" && value === \"\") {\n      return \"Student Name is required\";\n    }\n    if (fieldName === \"duration\" && value === \"\") {\n      return \"Duration is required\";\n    }\n    return \"\";\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    console.log(\"name, value\", name, value);\n    setSelectedV({\n      ...selectedValues,\n      [name]: value\n    });\n    setError({\n      ...error,\n      [name]: validateField(name, value)\n    });\n\n    // const sel_client = clients.find(\n    //   (client) => client.id === event.target.value\n    // );\n\n    // setSelectedClient({\n    //   id: sel_client.id,\n    //   name: sel_client.name,\n    //   index: event.target.value,\n    //   companyName: sel_client.companyname,\n    // });\n  };\n\n  console.log(clients, \"884848448484848\");\n  const renderStudents = () => {\n    return students.map((student, ind) => {\n      return /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: student.id,\n        children: student.name\n      }, ind, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const renderDuration = () => {\n    return students.map((student, ind) => {\n      return /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: student.id,\n        children: student.duration\n      }, ind, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const renderCourse = () => {\n    return students.map((student, ind) => {\n      return /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: student.id,\n        children: student.course\n      }, ind, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const renderCourseFee = () => {\n    return students.map((student, ind) => {\n      return /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: student.id,\n        children: student.fee\n      }, ind, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  // const handleInput = (event) => {\n  //   const re = /[0-9]+/g;\n  //   if (\n  //     event.target.name === \"totalPrice\" ||\n  //     event.target.name === \"hourly_units_worked\"\n  //   ) {\n  //     if (re.test(event.target.value)) {\n  //       setTaskInfo({ ...taskInfo, [event.target.name]: event.target.value });\n  //     } else {\n  //       if (!event.target.value) {\n  //         setTaskInfo({ ...taskInfo, [event.target.name]: event.target.value });\n  //       }\n  //       return;\n  //     }\n  //   } else {\n  //     setTaskInfo({ ...taskInfo, [event.target.name]: event.target.value });\n  //   }\n  // };\n\n  // const handleInputPrice = (event) => {\n  //   setTaskInfo({ ...taskInfo, [event.target.name]: event.target.value });\n  // };\n\n  // const handleTaskType = (event) => {\n  //   setTaskInfo({ ...taskInfo, type: event.target.value, totalPrice: \"\" });\n  // };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // // Validate all fields before submitting\n    // const newFormErrors = {};\n    // Object.keys(selectedValues).forEach((fieldName) => {\n    //   newFormErrors[fieldName] = validateField(\n    //     fieldName,\n    //     selectedValues[fieldName]\n    //   );\n    // });\n\n    // setError(newFormErrors);\n\n    // if (Object.values(newFormErrors).every((error) => error === \"\")) {\n    //   // form submission logic goes here\n    // }\n\n    // if (!shareInvoiceWith) {\n    //   toast.error(\"Please Enter Email\");\n    //   return;\n    // }\n    // if (!isTaskToUpdate) {\n    //   let taskInfoCopy = { ...taskInfo };\n    //   if (taskInfo?.type === \"hourly\") {\n    //     taskInfoCopy.totalPrice =\n    //       Number(taskInfoCopy?.hourly_units_worked) *\n    //       Number(taskInfoCopy?.number_of_hours);\n    //   }\n    //   if (taskInfo?.type === \"Fixed\") {\n    //     taskInfoCopy.hourly_units_worked = \"NA\";\n    //     taskInfoCopy.number_of_hours = \"NA\";\n    //   }\n\n    //   setTasks([...tasks, taskInfoCopy]);\n    //   let amount = totalAmount;\n    //   amount += Number(taskInfoCopy.totalPrice);\n    //   setTotalAmount(amount);\n    // } else {\n    //   const all_tasks = [...tasks];\n    //   const taskToUpdate = all_tasks[indexOfTaskToUpdate];\n    //   taskInfo.totalPrice =\n    //     taskInfo.type == \"hourly\"\n    //       ? taskInfo.hourly_units_worked * taskInfo.number_of_hours\n    //       : taskInfo.totalPrice;\n    //   all_tasks[indexOfTaskToUpdate] = taskInfo;\n    //   if (taskInfo?.type === \"Fixed\") {\n    //     taskInfo.hourly_units_worked = \"NA\";\n    //     taskInfo.number_of_hours = \"NA\";\n    //   }\n\n    //   let amount = totalAmount;\n    //   amount += Number(taskInfo.totalPrice) - Number(taskToUpdate.totalPrice);\n    //   setTotalAmount(amount);\n    //   setIsTaskToUpdate(false);\n    //   setTasks(all_tasks);\n    // }\n    // setTaskInfo({\n    //   taskName: \"\",\n    //   number_of_hours: \"\",\n    //   hourly_units_worked: \"\",\n    //   totalPrice: \"\",\n    //   type: \"\",\n    // });\n  };\n\n  const editTask = index => {\n    const taskToUpdate = tasks[index];\n    setTaskInfo(taskToUpdate);\n    setIsTaskToUpdate(true);\n    setIndexOfTaskToUpdate(index);\n  };\n  const deleteTask = async index => {\n    const willDelete = await swal({\n      title: \"Are you sure?\",\n      text: \"Are you sure that you want to delete this task?\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    });\n    if (willDelete) {\n      setTaskInfo({\n        taskName: \"\",\n        number_of_hours: \"\",\n        hourly_units_worked: \"\",\n        totalPrice: \"\",\n        type: \"\"\n      });\n      setIsTaskToUpdate(false);\n    }\n    if (!willDelete) return;\n    const allTasks = [...tasks];\n    const taskToDelete = tasks[index];\n    const total_amount = Number(totalAmount) - Number(taskToDelete.totalPrice);\n    allTasks.splice(index, 1);\n    setTasks(allTasks);\n    setTotalAmount(total_amount);\n  };\n  const isValidEmail = email => {\n    return /\\S+@\\S+\\.\\S+/.test(email);\n  };\n  const handleCurrencyType = event => {\n    set_currency_symbol(event.target.value.slice(4));\n    setCurrencyType(event.target.value);\n  };\n  const handle_show_sender_bank_details = () => {\n    set_show_sender_bank_details(!show_sender_bank_details);\n  };\n  const handleEmail = event => {\n    if (event.target.value !== \"\" && !isValidEmail(event.target.value)) {\n      setError({\n        ...error,\n        email: \"Email is invalid\"\n      });\n    } else {\n      setError({\n        ...error,\n        email: \"\"\n      });\n    }\n    setShareInvoiceWith(event.target.value);\n  };\n  const preventMinus = evt => {\n    if (evt.which != 8 && evt.which != 0 && evt.which < 48 || evt.which > 57) {\n      evt.preventDefault();\n    }\n  };\n  React.useEffect(() => {\n    if (dueDate) {\n      setIsInvalidDate(\"\");\n    }\n  });\n  console.log(typeof dueDate, \"dueDate\");\n  return /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n      loading: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        sx: {\n          marginTop: 8,\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        className: \"min_height create_invoice\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            width: \"40%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: \"100%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 1,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  sx: {\n                    width: \"100%\",\n                    marginTop: 2\n                  },\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"demo-simple-select-label\",\n                    children: \"Select Student\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    name: \"studentname\",\n                    labelId: \"selected_student\",\n                    id: \"selected_student\",\n                    value: selectedStudent.name,\n                    label: \"selected_student\",\n                    onChange: handleChange,\n                    children: renderStudents()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 19\n                }, this), error.studentname && /*#__PURE__*/_jsxDEV(Typography, {\n                  className: \"emailError\",\n                  children: error.studentname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  sx: {\n                    width: \"100%\",\n                    marginTop: 2\n                  },\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"demo-simple-select-label\",\n                    children: \"Course Duration\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    name: \"duration\",\n                    labelId: \"duration\",\n                    id: \"duration\",\n                    value: selectedDuration.duration,\n                    label: \"duration_type\",\n                    onChange: handleChange,\n                    children: renderDuration()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 19\n                }, this), error.duration && /*#__PURE__*/_jsxDEV(Typography, {\n                  className: \"emailError\",\n                  children: error.duration\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              width: \"100%\",\n              marginTop: 2\n            },\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-simple-select-label\",\n              children: \"Course\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"currency_type\",\n              id: \"currency_type\",\n              value: selectedCourse.course,\n              label: \"currency_type\",\n              onChange: handleCurrencyType,\n              children: renderCourse()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              width: \"100%\",\n              marginTop: 2\n            },\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-simple-select-label\",\n              children: \"Course Fee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"currency_type\",\n              id: \"currency_type\",\n              value: selectedCourseFee.fee,\n              label: \"currency_type\",\n              onChange: handleCurrencyType,\n              children: renderCourseFee()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: \"100%\",\n                  marginTop: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  type: \"number\",\n                  id: \"name\",\n                  label: \"Deposite Amount\",\n                  name: \"name\",\n                  autoComplete: \"name\",\n                  inputProps: {\n                    sx: {\n                      height: 10,\n                      marginTop: 1\n                    }\n                  },\n                  onChange: handleInput,\n                  value: depositeAmount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: \"100%\",\n                  marginTop: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  type: \"number\",\n                  fullWidth: true,\n                  id: \"name\",\n                  label: \"Pending Amount\",\n                  name: \"name\",\n                  autoComplete: \"name\",\n                  inputProps: {\n                    sx: {\n                      height: 10,\n                      marginTop: 1\n                    }\n                  },\n                  onChange: handleInput,\n                  value: pendingAmount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: \"100%\",\n              marginTop: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              fullWidth: true,\n              id: \"name\",\n              label: \"Payment Method\",\n              name: \"name\",\n              autoComplete: \"name\",\n              inputProps: {\n                sx: {\n                  height: 10,\n                  marginTop: 1\n                }\n              },\n              onChange: handleInput,\n              value: paymentMethod\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              width: \"87%\",\n              justifyContent: \"space-between\"\n            },\n            mt: 1,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                fontWeight: 500\n              },\n              children: \"Add Sender Bank Details on Invoice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: show_sender_bank_details,\n              onChange: handle_show_sender_bank_details,\n              inputProps: {\n                \"aria-label\": \"controlled\"\n              },\n              sx: {\n                padding: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: \"task_form\",\n            component: \"form\",\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              mt: 2,\n              sx: {\n                width: \"87%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                sx: {\n                  width: \"100%\",\n                  marginBottom: 1.5\n                },\n                variant: \"contained\",\n                children: \"Create Invoice\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 371,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateInvoice, \"Ap8iYeBwBdGyngL3Nm7K5xPArYo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useNavigate, useParams];\n});\n_c = CreateInvoice;\nvar _c;\n$RefreshReg$(_c, \"CreateInvoice\");","map":{"version":3,"names":["Button","Container","TextField","createTheme","ThemeProvider","Checkbox","Stack","Grid","Box","Typography","MenuItem","Select","FormControl","InputLabel","ProtectedRoute","Spinner","React","useState","useDispatch","useSelector","setLoading","GET_INVOICE","GET_STUDENTS","useNavigate","useParams","swal","Navbar","Footer","moment","toast","theme","CreateInvoice","dispatch","shareInvoiceWith","setShareInvoiceWith","error","setError","studentname","duration","students","state","Students","invoiceCreating","invoiceToUpdate","invoices","console","log","selectedStudent","setSelectedStudent","id","index","name","selectedDuration","setSelectedDuration","selectedCourse","setSelectedCourse","course","selectedCourseFee","setSelectedCourseFee","fee","depositeAmount","setDepositeAmount","pendingAmount","setPendingAmount","paymentMethod","setPaymentMethod","navigate","invoiceId","isInvoiceCreating","JSON","parse","localStorage","getItem","useEffect","type","payload","setTotalAmount","Number","invoicetotalvalue","client_detail","student_detail","dropdown","validateField","fieldName","value","handleChange","event","target","setSelectedV","selectedValues","clients","renderStudents","map","student","ind","renderDuration","renderCourse","renderCourseFee","handleSubmit","preventDefault","editTask","taskToUpdate","tasks","setTaskInfo","setIsTaskToUpdate","setIndexOfTaskToUpdate","deleteTask","willDelete","title","text","icon","buttons","dangerMode","taskName","number_of_hours","hourly_units_worked","totalPrice","allTasks","taskToDelete","total_amount","totalAmount","splice","setTasks","isValidEmail","email","test","handleCurrencyType","set_currency_symbol","slice","setCurrencyType","handle_show_sender_bank_details","set_show_sender_bank_details","show_sender_bank_details","handleEmail","preventMinus","evt","which","dueDate","setIsInvalidDate","marginTop","display","justifyContent","flexDirection","alignItems","width","sx","height","handleInput","fontWeight","padding","marginBottom"],"sources":["/Users/zestgeek3/work/invocenew/src/Components/Invoice/CreateInvoice.js"],"sourcesContent":["import { Button, Container, TextField } from \"@mui/material\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Stack from \"@mui/material/Stack\";\nimport Grid from \"@mui/material/Grid\";\n\nimport Box from \"@mui/material/Box\";\nimport { Typography } from \"@mui/material\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport ProtectedRoute from \"../../Routes/ProtectedRoute\";\nimport Spinner from \"../Spinner/Spinner\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setLoading } from \"../../Store/Slices/Invoice\";\nimport {  GET_INVOICE, GET_STUDENTS } from \"../../Store/Action_Constants\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport { Navbar } from \"../Navbar/Navbar\";\nimport { Footer } from \"../Footer/Footer\";\nimport moment from \"moment\";\nimport { toast } from \"react-toastify\";\nconst theme = createTheme();\nexport const CreateInvoice = () => {\n  const dispatch = useDispatch();\n  const [shareInvoiceWith, setShareInvoiceWith] = useState(\"\");\n\n\n  const [error, setError] = React.useState({\n    studentname: \"\",\n    duration: \"\",\n  });\n\n  // const { clients } = useSelector((state) => state.clients);\n  const { students } = useSelector((state) => state.Students);\n  const { invoiceCreating, invoiceToUpdate } = useSelector(\n    (state) => state.invoices\n  );\n  console.log(\"invoiceToUpdate, invoiceCreating \",invoiceToUpdate, invoiceCreating)\n  const [selectedStudent, setSelectedStudent] = React.useState({\n    id: \"\",\n    index: \"\",\n    name: \"\",\n  });\n  const [selectedDuration, setSelectedDuration] = React.useState({\n    id: \"\",\n    index: \"\",\n    duration: \"\",\n  });\n  const [selectedCourse, setSelectedCourse] = React.useState({\n    id: \"\",\n    index: \"\",\n    course: \"\",\n  });\n  const [selectedCourseFee, setSelectedCourseFee] = React.useState({\n    id: \"\",\n    index: \"\",\n    fee: \"\",\n  });\n\n  const [depositeAmount, setDepositeAmount] = React.useState(0)\n  const [pendingAmount, setPendingAmount] = React.useState(0)\n  const [paymentMethod, setPaymentMethod] = React.useState(\"\")\n\n\n\n\n\n\n  const navigate = useNavigate();\n\n  // const handleDateChange = (newValue) => {\n  //   setInvoiceDate(newValue);\n  //   if (newValue.diff(dueDate, \"hour\") >= 0) {\n  //     setDueDate(null);\n  //     setIsInvalidDate(true);\n  //   }\n  // };\n\n  const { invoiceId } = useParams();\n\n\n  const isInvoiceCreating = JSON.parse(localStorage.getItem(\"invoicecreating\"));\n  React.useEffect(() => {\n    if (invoiceId) {\n      dispatch(setLoading(true));\n      dispatch({ type: GET_INVOICE, payload: invoiceId });\n    }\n  }, []);\n  React.useEffect(() => {\n    if (invoiceToUpdate && invoiceId) {\n      setTotalAmount(Number(invoiceToUpdate.invoicetotalvalue));\n\n      setSelectedStudent({\n        id: invoiceToUpdate?.client_detail?.id,\n        index: invoiceToUpdate?.client_detail?.id,\n        name: invoiceToUpdate?.client_detail?.name,\n      });\n      setSelectedCourse({\n        id: invoiceToUpdate?.student_detail?.id,\n        index: invoiceToUpdate?.student_detail?.id,\n        course: invoiceToUpdate?.student_detail?.course,\n      })\n      setSelectedDuration({\n        id: invoiceToUpdate?.student_detail?.id,\n        index: invoiceToUpdate?.student_detail?.id,\n        duration: invoiceToUpdate?.student_detail?.course,\n      })\n      setSelectedCourseFee({\n        id: invoiceToUpdate?.student_detail?.id,\n        index: invoiceToUpdate?.student_detail?.id,\n        fee: invoiceToUpdate?.student_detail?.course,\n      })\n      setDepositeAmount(Number(invoiceToUpdate))\n\n    \n    }\n  }, [invoiceToUpdate]);\n\n  React.useEffect(() => {\n    if (\n      !invoiceCreating &&\n      (!isInvoiceCreating || isInvoiceCreating === \"false\")\n    ) {\n      navigate(\"/invoices\");\n    }\n  }, [invoiceCreating]);\n\n  React.useEffect(() => {\n    dispatch({ type: GET_STUDENTS, dropdown: 1 });\n  }, []);\n\n  const validateField = (fieldName, value) => {\n    if (fieldName === \"studentname\" && value === \"\") {\n      return \"Student Name is required\";\n    }\n    if (fieldName === \"duration\" && value === \"\") {\n      return \"Duration is required\";\n    }\n    return \"\";\n  };\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    console.log(\"name, value\", name, value);\n    setSelectedV({\n      ...selectedValues,\n      [name]: value,\n    });\n    setError({\n      ...error,\n      [name]: validateField(name, value),\n    });\n\n    // const sel_client = clients.find(\n    //   (client) => client.id === event.target.value\n    // );\n\n    // setSelectedClient({\n    //   id: sel_client.id,\n    //   name: sel_client.name,\n    //   index: event.target.value,\n    //   companyName: sel_client.companyname,\n    // });\n  };\n  console.log(clients, \"884848448484848\");\n  const renderStudents = () => {\n    return students.map((student, ind) => {\n      return (\n        <MenuItem value={student.id} key={ind}>\n          {student.name}\n        </MenuItem>\n      );\n    });\n  };\n  const renderDuration = () => {\n    return students.map((student, ind) => {\n      return (\n        <MenuItem value={student.id} key={ind}>\n          {student.duration}\n        </MenuItem>\n      );\n    });\n  };\n  const renderCourse = () => {\n    return students.map((student, ind) => {\n      return (\n        <MenuItem value={student.id} key={ind}>\n          {student.course}\n        </MenuItem>\n      );\n    });\n  };\n  const renderCourseFee = () => {\n    return students.map((student, ind) => {\n      return (\n        <MenuItem value={student.id} key={ind}>\n          {student.fee}\n        </MenuItem>\n      );\n    });\n  };\n\n  // const handleInput = (event) => {\n  //   const re = /[0-9]+/g;\n  //   if (\n  //     event.target.name === \"totalPrice\" ||\n  //     event.target.name === \"hourly_units_worked\"\n  //   ) {\n  //     if (re.test(event.target.value)) {\n  //       setTaskInfo({ ...taskInfo, [event.target.name]: event.target.value });\n  //     } else {\n  //       if (!event.target.value) {\n  //         setTaskInfo({ ...taskInfo, [event.target.name]: event.target.value });\n  //       }\n  //       return;\n  //     }\n  //   } else {\n  //     setTaskInfo({ ...taskInfo, [event.target.name]: event.target.value });\n  //   }\n  // };\n\n  // const handleInputPrice = (event) => {\n  //   setTaskInfo({ ...taskInfo, [event.target.name]: event.target.value });\n  // };\n\n  // const handleTaskType = (event) => {\n  //   setTaskInfo({ ...taskInfo, type: event.target.value, totalPrice: \"\" });\n  // };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // // Validate all fields before submitting\n    // const newFormErrors = {};\n    // Object.keys(selectedValues).forEach((fieldName) => {\n    //   newFormErrors[fieldName] = validateField(\n    //     fieldName,\n    //     selectedValues[fieldName]\n    //   );\n    // });\n\n    // setError(newFormErrors);\n\n    // if (Object.values(newFormErrors).every((error) => error === \"\")) {\n    //   // form submission logic goes here\n    // }\n\n    // if (!shareInvoiceWith) {\n    //   toast.error(\"Please Enter Email\");\n    //   return;\n    // }\n    // if (!isTaskToUpdate) {\n    //   let taskInfoCopy = { ...taskInfo };\n    //   if (taskInfo?.type === \"hourly\") {\n    //     taskInfoCopy.totalPrice =\n    //       Number(taskInfoCopy?.hourly_units_worked) *\n    //       Number(taskInfoCopy?.number_of_hours);\n    //   }\n    //   if (taskInfo?.type === \"Fixed\") {\n    //     taskInfoCopy.hourly_units_worked = \"NA\";\n    //     taskInfoCopy.number_of_hours = \"NA\";\n    //   }\n\n    //   setTasks([...tasks, taskInfoCopy]);\n    //   let amount = totalAmount;\n    //   amount += Number(taskInfoCopy.totalPrice);\n    //   setTotalAmount(amount);\n    // } else {\n    //   const all_tasks = [...tasks];\n    //   const taskToUpdate = all_tasks[indexOfTaskToUpdate];\n    //   taskInfo.totalPrice =\n    //     taskInfo.type == \"hourly\"\n    //       ? taskInfo.hourly_units_worked * taskInfo.number_of_hours\n    //       : taskInfo.totalPrice;\n    //   all_tasks[indexOfTaskToUpdate] = taskInfo;\n    //   if (taskInfo?.type === \"Fixed\") {\n    //     taskInfo.hourly_units_worked = \"NA\";\n    //     taskInfo.number_of_hours = \"NA\";\n    //   }\n\n    //   let amount = totalAmount;\n    //   amount += Number(taskInfo.totalPrice) - Number(taskToUpdate.totalPrice);\n    //   setTotalAmount(amount);\n    //   setIsTaskToUpdate(false);\n    //   setTasks(all_tasks);\n    // }\n    // setTaskInfo({\n    //   taskName: \"\",\n    //   number_of_hours: \"\",\n    //   hourly_units_worked: \"\",\n    //   totalPrice: \"\",\n    //   type: \"\",\n    // });\n  };\n\n  const editTask = (index) => {\n    const taskToUpdate = tasks[index];\n    setTaskInfo(taskToUpdate);\n    setIsTaskToUpdate(true);\n    setIndexOfTaskToUpdate(index);\n  };\n\n  const deleteTask = async (index) => {\n    const willDelete = await swal({\n      title: \"Are you sure?\",\n      text: \"Are you sure that you want to delete this task?\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    });\n    if (willDelete) {\n      setTaskInfo({\n        taskName: \"\",\n        number_of_hours: \"\",\n        hourly_units_worked: \"\",\n        totalPrice: \"\",\n        type: \"\",\n      });\n      setIsTaskToUpdate(false);\n    }\n    if (!willDelete) return;\n    const allTasks = [...tasks];\n    const taskToDelete = tasks[index];\n    const total_amount = Number(totalAmount) - Number(taskToDelete.totalPrice);\n    allTasks.splice(index, 1);\n    setTasks(allTasks);\n    setTotalAmount(total_amount);\n  };\n\n  const isValidEmail = (email) => {\n    return /\\S+@\\S+\\.\\S+/.test(email);\n  };\n\n  const handleCurrencyType = (event) => {\n    set_currency_symbol(event.target.value.slice(4));\n    setCurrencyType(event.target.value);\n  };\n\n  const handle_show_sender_bank_details = () => {\n    set_show_sender_bank_details(!show_sender_bank_details);\n  };\n\n  const handleEmail = (event) => {\n    if (event.target.value !== \"\" && !isValidEmail(event.target.value)) {\n      setError({ ...error, email: \"Email is invalid\" });\n    } else {\n      setError({ ...error, email: \"\" });\n    }\n\n    setShareInvoiceWith(event.target.value);\n  };\n  const preventMinus = (evt) => {\n    if (\n      (evt.which != 8 && evt.which != 0 && evt.which < 48) ||\n      evt.which > 57\n    ) {\n      evt.preventDefault();\n    }\n  };\n  React.useEffect(() => {\n    if (dueDate) {\n      setIsInvalidDate(\"\");\n    }\n  });\n\n  console.log(typeof dueDate, \"dueDate\");\n\n  return (\n    <ProtectedRoute>\n      <Navbar />\n      <Spinner loading={false} />\n      <ThemeProvider theme={theme}>\n        <Container\n          component=\"main\"\n          sx={{ marginTop: 8, display: \"flex\", justifyContent: \"center\" }}\n          className=\"min_height create_invoice\"\n        >\n          <Box\n            sx={{\n              marginTop: 4,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              width: \"40%\",\n            }}\n          >\n            <Box\n              sx={{\n                width: \"100%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n            >\n              <Grid container spacing={1}>\n                {/* First column */}\n                <Grid item xs={6}>\n                  <FormControl sx={{ width: \"100%\", marginTop: 2 }} required>\n                    <InputLabel id=\"demo-simple-select-label\">\n                      Select Student\n                    </InputLabel>\n                    <Select\n                      name=\"studentname\"\n                      labelId=\"selected_student\"\n                      id=\"selected_student\"\n                      value={selectedStudent.name}\n                      label=\"selected_student\"\n                      onChange={handleChange}\n                    >\n                       {renderStudents()}\n             \n                    </Select>\n                  </FormControl>\n                  {error.studentname && (\n                    <Typography className=\"emailError\">\n                      {error.studentname}\n                    </Typography>\n                  )}\n                </Grid>\n\n                {/* Second column */}\n                <Grid item xs={6}>\n                  <FormControl sx={{ width: \"100%\", marginTop: 2 }} required>\n                    <InputLabel id=\"demo-simple-select-label\">\n                      Course Duration\n                    </InputLabel>\n                    <Select\n                      name=\"duration\"\n                      labelId=\"duration\"\n                      id=\"duration\"\n                      value={selectedDuration.duration}\n                      label=\"duration_type\"\n                      onChange={handleChange}\n                    >\n                     {renderDuration()}\n                    </Select>\n                  </FormControl>\n                  {error.duration && (\n                    <Typography className=\"emailError\">\n                      {error.duration}\n                    </Typography>\n                  )}\n                </Grid>\n              </Grid>\n            </Box>\n\n            <FormControl sx={{ width: \"100%\", marginTop: 2 }} required>\n              <InputLabel id=\"demo-simple-select-label\">Course</InputLabel>\n              <Select\n                labelId=\"currency_type\"\n                id=\"currency_type\"\n                value={selectedCourse.course}\n                label=\"currency_type\"\n                onChange={handleCurrencyType}\n              >\n              {renderCourse()}\n              </Select>\n            </FormControl>\n            <FormControl sx={{ width: \"100%\", marginTop: 2 }} required>\n              <InputLabel id=\"demo-simple-select-label\">Course Fee</InputLabel>\n              <Select\n                labelId=\"currency_type\"\n                id=\"currency_type\"\n                value={selectedCourseFee.fee}\n                label=\"currency_type\"\n                onChange={handleCurrencyType}\n              >\n               {renderCourseFee()}\n              </Select>\n            </FormControl>\n            <Grid container spacing={1}>\n              <Grid item xs={6}>\n                <Box sx={{ width: \"100%\", marginTop: 2 }}>\n                  <TextField\n                    required\n                    fullWidth\n                    type=\"number\"\n                    id=\"name\"\n                    label=\"Deposite Amount\"\n                    name=\"name\"\n                    autoComplete=\"name\"\n                    inputProps={{ sx: { height: 10, marginTop: 1 } }}\n                    onChange={handleInput}\n                    value={depositeAmount}\n                  />\n                </Box>\n              </Grid>\n              <Grid item xs={6}>\n                <Box sx={{ width: \"100%\", marginTop: 2 }}>\n                  <TextField\n                    required\n                    type=\"number\"\n                    fullWidth\n                    id=\"name\"\n                    label=\"Pending Amount\"\n                    name=\"name\"\n                    autoComplete=\"name\"\n                    inputProps={{ sx: { height: 10, marginTop: 1 } }}\n                    onChange={handleInput}\n                    value={pendingAmount}\n                  />\n                </Box>\n              </Grid>\n            </Grid>\n            <Box sx={{ width: \"100%\", marginTop: 2 }}>\n              <TextField\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Payment Method\"\n                name=\"name\"\n                autoComplete=\"name\"\n                inputProps={{ sx: { height: 10, marginTop: 1 } }}\n                onChange={handleInput}\n                value={paymentMethod}\n              />\n            </Box>\n            <Box\n              sx={{\n                display: \"flex\",\n                width: \"87%\",\n                justifyContent: \"space-between\",\n              }}\n              mt={1}\n            >\n              <Typography sx={{ fontWeight: 500 }}>\n                Add Sender Bank Details on Invoice\n              </Typography>\n              <Checkbox\n                checked={show_sender_bank_details}\n                onChange={handle_show_sender_bank_details}\n                inputProps={{ \"aria-label\": \"controlled\" }}\n                sx={{ padding: 0 }}\n              />\n            </Box>\n            <Box className=\"task_form\" component=\"form\" onSubmit={handleSubmit}>\n              {/* <Typography\n                component=\"h1\"\n                variant=\"h5\"\n                sx={{ fontWeight: 600 }}\n                mt={1}\n              >\n                {isTaskToUpdate ? \"Update Task \" : \"Add Task\"}\n              </Typography>\n              <TextField\n                required\n                id=\"taskName\"\n                label=\"Task Name\"\n                name=\"taskName\"\n                autoComplete=\"taskName\"\n                sx={{ width: \"87%\", marginTop: 2 }}\n                inputProps={{ sx: { height: 15, marginTop: 1 } }}\n                onChange={handleInput}\n                value={taskInfo.taskName}\n              />\n              <FormControl sx={{ width: \"87%\", marginTop: 2 }}>\n                <InputLabel id=\"demo-simple-select-label\">Task Type</InputLabel>\n                <Select\n                  labelId=\"selected_client\"\n                  id=\"selected_client\"\n                  value={taskInfo.type}\n                  label=\"selected_client\"\n                  onChange={handleTaskType}\n                >\n                  <MenuItem value=\"Fixed\">Fixed</MenuItem>\n                  <MenuItem value=\"hourly\">Hourly</MenuItem>\n                </Select>\n              </FormControl>\n\n              {taskInfo.type === \"hourly\" && (\n                <>\n                  <Box className=\"date_picker\" mt={3}>\n                    <TextField\n                      required\n                      id=\"number_of_hours\"\n                      label=\"Hours\"\n                      type=\"number\"\n                      onKeyPress={preventMinus}\n                      InputProps={{\n                        inputProps: { min: 0 },\n                      }}\n                      onWheel={(e) => e.target.blur()}\n                      name=\"number_of_hours\"\n                      autoComplete=\"number_of_hours\"\n                      sx={{ width: \"90%\", marginRight: 1 }}\n                      onChange={handleInput}\n                      value={taskInfo.number_of_hours}\n                    />\n\n                    <TextField\n                      required\n                      id=\"hourly_units_worked\"\n                      label=\"Per Hour Price\"\n                      type=\"number\"\n                      onKeyPress={preventMinus}\n                      InputProps={{\n                        inputProps: { min: 0 },\n                      }}\n                      name=\"hourly_units_worked\"\n                      autoComplete=\"hourly_units_worked\"\n                      sx={{ width: \"90%\", marginLeft: 1 }}\n                      onChange={handleInput}\n                      onWheel={(e) => e.target.blur()}\n                      value={taskInfo.hourly_units_worked}\n                    />\n                  </Box>\n                </>\n              )}\n              <Box\n                sx={{\n                  width: \"87%\",\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                {taskInfo.type === \"hourly\" ? (\n                  <TextField\n                    required\n                    id=\"totalPrice\"\n                    label=\"Total Price\"\n                    name=\"totalPrice\"\n                    autoComplete=\"totalPrice\"\n                    sx={{ width: \"100%\", marginTop: 2 }}\n                    value={\n                      isNaN(\n                        taskInfo.hourly_units_worked * taskInfo.number_of_hours\n                      )\n                        ? 0\n                        : taskInfo.hourly_units_worked *\n                          taskInfo.number_of_hours\n                    }\n                    onChange={handleInputPrice}\n                  />\n                ) : (\n                  <TextField\n                    required\n                    id=\"totalPrice\"\n                    label=\"Total Price\"\n                    name=\"totalPrice\"\n                    autoComplete=\"totalPrice\"\n                    sx={{ width: \"100%\", marginTop: 2 }}\n                    onChange={handleInput}\n                    value={taskInfo.totalPrice}\n                  />\n                )}\n              </Box> */}\n              <Box mt={2} sx={{ width: \"87%\" }}>\n                <Button\n                  type=\"submit\"\n                  sx={{ width: \"100%\", marginBottom: 1.5 }}\n                  variant=\"contained\"\n                >\n                  Create Invoice\n                </Button>\n              </Box>\n            </Box>\n          </Box>\n        </Container>\n      </ThemeProvider>\n      <Footer />\n    </ProtectedRoute>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}