{"ast":null,"code":"var _jsxFileName = \"/Users/zestgeek3/work/invocenew/src/Components/Modal/PaymentList.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport TableRow from \"@mui/material/TableRow\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { payment_list } from \"../../Services/Invoice_Services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PaymentList = _ref => {\n  _s();\n  let {\n    isDepositedModalOpen,\n    onClose,\n    invoiceId\n  } = _ref;\n  const [paymentList, setPaymentList] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n  const paymentListColumns = [{\n    id: \"id\",\n    label: \"Invoice_Number\",\n    minWidth: 100\n  }, {\n    id: \"amount\",\n    label: \"Amount\",\n    minWidth: 100\n  }, {\n    id: \"payment_method\",\n    label: \"Payment Method\",\n    minWidth: 100\n  }, {\n    id: \"created_at\",\n    label: \"Payment Date\",\n    minWidth: 100\n  }];\n  const style = {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 500,\n    bgcolor: \"background.paper\",\n    boxShadow: 24,\n    p: 4\n  };\n  React.useEffect(() => {\n    const fetchPaymentList = async () => {\n      try {\n        var _paymentData$data;\n        setLoading(true);\n        const paymentData = await payment_list(invoiceId);\n        setPaymentList((paymentData === null || paymentData === void 0 ? void 0 : (_paymentData$data = paymentData.data) === null || _paymentData$data === void 0 ? void 0 : _paymentData$data.paid_amount) || []);\n      } catch (error) {\n        console.error(\"Error fetching payment list data\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPaymentList();\n  }, [invoiceId]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: isDepositedModalOpen,\n    onClose: onClose,\n    \"aria-labelledby\": \"deposited-amounts-modal-title\",\n    \"aria-describedby\": \"deposited-amounts-modal-description\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: style,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"deposited-amounts-modal-title\",\n        children: \"Deposited Amounts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: paymentListColumns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: paymentList.map((paymentItem, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: paymentListColumns.map(column => {\n              let value = paymentItem[column.id];\n              return /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: column.id === \"amount\" ? /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: \"flex\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      marginRight: \"4px\"\n                    },\n                    children: \"Rs\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 29\n                  }, this), value]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 27\n                }, this) : column.id === \"payment_method\" ? /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: \"flex\"\n                  },\n                  children: value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 27\n                }, this) : column.id === \"created_at\" ? /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: \"flex\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: new Date(value).toLocaleString()\n                  }, void 0, false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: value\n                }, void 0, false)\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 23\n              }, this);\n            })\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentList, \"sCmJiv8fWH3tISkzwb7hdY/ISJw=\");\n_c = PaymentList;\nexport default PaymentList;\nvar _c;\n$RefreshReg$(_c, \"PaymentList\");","map":{"version":3,"names":["React","Table","TableBody","TableCell","TableHead","Box","Modal","TableRow","CircularProgress","payment_list","PaymentList","isDepositedModalOpen","onClose","invoiceId","paymentList","setPaymentList","useState","loading","setLoading","paymentListColumns","id","label","minWidth","style","position","top","left","transform","width","bgcolor","boxShadow","p","useEffect","fetchPaymentList","paymentData","data","paid_amount","error","console","display","flexDirection","alignItems","justifyContent","height","map","column","paymentItem","index","value","marginRight","Date","toLocaleString"],"sources":["/Users/zestgeek3/work/invocenew/src/Components/Modal/PaymentList.js"],"sourcesContent":["import React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport TableRow from \"@mui/material/TableRow\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { payment_list } from \"../../Services/Invoice_Services\";\n\nconst PaymentList = ({ isDepositedModalOpen, onClose, invoiceId }) => {\n  const [paymentList, setPaymentList] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n\n  const paymentListColumns = [\n    { id: \"id\", label: \"Invoice_Number\", minWidth: 100 },\n    { id: \"amount\", label: \"Amount\", minWidth: 100 },\n    { id: \"payment_method\", label: \"Payment Method\", minWidth: 100 },\n    { id: \"created_at\", label: \"Payment Date\", minWidth: 100 },\n  ];\n\n  const style = {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 500,\n    bgcolor: \"background.paper\",\n    boxShadow: 24,\n    p: 4,\n  };\n\n  React.useEffect(() => {\n    const fetchPaymentList = async () => {\n      try {\n        setLoading(true);\n        const paymentData = await payment_list(invoiceId);\n        setPaymentList(paymentData?.data?.paid_amount || []);\n      } catch (error) {\n        console.error(\"Error fetching payment list data\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPaymentList();\n  }, [invoiceId]);\n\n  return (\n    <Modal\n      open={isDepositedModalOpen}\n      onClose={onClose}\n      aria-labelledby=\"deposited-amounts-modal-title\"\n      aria-describedby=\"deposited-amounts-modal-description\"\n    >\n      <Box sx={style}>\n        <h2 id=\"deposited-amounts-modal-title\">Deposited Amounts</h2>\n        {loading ? (\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              height: \"100%\",\n            }}\n          >\n            <CircularProgress />\n          </Box>\n        ) : (\n          <Table>\n            <TableHead>\n              <TableRow>\n                {paymentListColumns.map((column) => (\n                  <TableCell key={column.id} align=\"left\">\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paymentList.map((paymentItem, index) => (\n                <TableRow key={index}>\n                  {paymentListColumns.map((column) => {\n                    let value = paymentItem[column.id];\n                    return (\n                      <TableCell key={column.id} align=\"left\">\n                        {column.id === \"amount\" ? (\n                          <Box sx={{ display: \"flex\" }}>\n                            <span style={{ marginRight: \"4px\" }}>Rs</span>\n                            {value}\n                          </Box>\n                        ) : column.id === \"payment_method\" ? (\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                            }}\n                          >\n                            {value}\n                          </Box>\n                        ) : column.id === \"created_at\" ? (\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                            }}\n                          >\n                            <>{new Date(value).toLocaleString()}</>\n                          </Box>\n                        ) : (\n                          <>{value}</>\n                        )}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        )}\n      </Box>\n    </Modal>\n  );\n};\n\nexport default PaymentList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}